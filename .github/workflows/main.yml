name: HWKMDElectronCI

on: 
  pull_request:
    types: [opened, reopened]

jobs:
  job-macos-build:
    name: Build (MacOS)
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '12'
        check-latest: true

    - name: Install UI deps
      run: |
        cd electron/ui
        npm install

    - name: build GUI
      run: |
        npm run build-electron
        cd ../

    - name: Install Electron deps
      run: |
        npm install

    - name: Install Electron build tools
      run: npm install -g electron-builder

    - name: Build
      run: |
        npm run dist
        tar -czvf hw-kmd-rewards-claim-desktop-osx.tar.gz dist

    - name: Upload hw-kmd-rewards-claim-desktop-osx.tar.gz as artifact
      uses: actions/upload-artifact@v1
      with:
        name: hw-kmd-rewards-claim-desktop-osx
        path: ./hw-kmd-rewards-claim-desktop-osx.tar.gz

  job-linux-build:
    name: Build (Linux)
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '12'
        check-latest: true

    - name: Install UI deps
      run: |
        cd electron/ui
        npm install

    - name: build GUI
      run: |
        npm run build-electron
        cd ../

    - name: Install Electron deps
      run: |
        npm install

    - name: Build
      run: |
        npm run dist
        tar -czvf hw-kmd-rewards-claim-desktop-linux.tar.gz dist

    - name: Upload hw-kmd-rewards-claim-desktop-linux.tar.gz as artifact
      uses: actions/upload-artifact@v1
      with:
        name: hw-kmd-rewards-claim-desktop-linux
        path: ./hw-kmd-rewards-claim-desktop-linux.tar.gz

  job-win-build:
    name: Build (Windows)
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '12'
        check-latest: true

    - name: Install UI deps
      run: |
        cd electron/ui
        npm install

    - name: build GUI
      run: |
        npm run build-electron
        cd ../

    - name: Install Electron deps
      run: |
        npm install

    - name: Build
      run: |
        npm run dist-win
        tar -czvf hw-kmd-rewards-claim-desktop-win.tar.gz dist

    - name: Upload hw-kmd-rewards-claim-desktop-win.tar.gz as artifact
      uses: actions/upload-artifact@v1
      with:
        name: hw-kmd-rewards-claim-desktop-win
        path: ./hw-kmd-rewards-claim-desktop-win.tar.gz

  job-release:
    name: Release
    runs-on: ubuntu-latest
    needs: [job-macos-build, job-linux-build, job-win-build]

    steps:
      - name: Download Artifacts (Linux)
        uses: actions/download-artifact@v1
        with:
          name: verus-desktop-linux
      - name: Download Artifacts (Win)
        uses: actions/download-artifact@v1
        with:
          name: verus-desktop-win
      - name: Download Artifacts (MacOS)
        uses: actions/download-artifact@v1
        with:
          name: verus-desktop-osx
      - name: Prepare Archives
        run: |
          mv verus-desktop-linux/verus-desktop-linux.tar.gz .
          mv verus-desktop-win/verus-desktop-win.tar.gz .
          mv verus-desktop-osx/verus-desktop-osx.tar.gz .

      - name: Generate build number  # gen ${{ steps.buildnumber.outputs.build_number }} for release name
        id: buildnumber
        uses: einaregilsson/build-number@v1 
        with:
          token: ${{secrets.github_token}}        

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.buildnumber.outputs.build_number }}
          release_name: Build - ${{ github.sha }}
          draft: false
          prerelease: true

      - name: Upload Release Asset (Linux)
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./verus-desktop-linux.tar.gz
          asset_name: verus-desktop-linux.tar.gz
          asset_content_type: application/tar+gzip

      - name: Upload Release Asset (Win)
        id: upload-release-asset-win 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./verus-desktop-win.tar.gz
          asset_name: verus-desktop-win.tar.gz
          asset_content_type: application/tar+gzip

      - name: Upload Release Asset (MacOS)
        id: upload-release-asset-macos 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./verus-desktop-osx.tar.gz
          asset_name: verus-desktop-osx.tar.gz
          asset_content_type: application/tar+gzip